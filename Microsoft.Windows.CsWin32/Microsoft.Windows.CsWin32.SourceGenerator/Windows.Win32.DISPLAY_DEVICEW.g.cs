// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981
using global::System;
using global::System.Diagnostics;
using global::System.Diagnostics.CodeAnalysis;
using global::System.Runtime.CompilerServices;
using global::System.Runtime.InteropServices;
using global::System.Runtime.Versioning;
using winmdroot = global::Windows.Win32;
namespace Windows.Win32
{
	namespace Graphics.Gdi
	{
		/// <summary>The DISPLAY_DEVICE structure receives information about the display device specified by the iDevNum parameter of the EnumDisplayDevices function.</summary>
		/// <remarks>
		/// <para>The four string members are set based on the parameters passed to <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-enumdisplaydevicesa">EnumDisplayDevices</a>. If the <i>lpDevice</i> param is <b>NULL</b>, then DISPLAY_DEVICE is filled in with information about the display adapter(s). If it is a valid device name, then it is filled in with information about the monitor(s) for that device.</para>
		/// <para>> [!NOTE] > The wingdi.h header defines DISPLAY_DEVICE as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
		/// <para><see href="https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-display_devicew#">Read more on docs.microsoft.com</see>.</para>
		/// </remarks>
		[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
		internal partial struct DISPLAY_DEVICEW
		{
			/// <summary>Size, in bytes, of the <b>DISPLAY_DEVICE</b> structure. This must be initialized prior to calling <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-enumdisplaydevicesa">EnumDisplayDevices</a>.</summary>
			internal uint cb;
			/// <summary>An array of characters identifying the device name. This is either the adapter device or the monitor device.</summary>
			internal winmdroot.__char_32 DeviceName;
			/// <summary>An array of characters containing the device context string. This is either a description of the display adapter or of the display monitor.</summary>
			internal winmdroot.__char_128 DeviceString;
			/// <summary>
			/// <para>Device state flags. It can be any reasonable combination of the following. </para>
			/// <para>This doc was truncated.</para>
			/// <para><see href="https://docs.microsoft.com/windows/win32/api//wingdi/ns-wingdi-display_devicew#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal uint StateFlags;
			/// <summary>Not used.</summary>
			internal winmdroot.__char_128 DeviceID;
			/// <summary>Reserved.</summary>
			internal winmdroot.__char_128 DeviceKey;
		}
	}
}
