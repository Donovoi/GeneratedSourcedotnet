// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981
using global::System;
using global::System.Diagnostics;
using global::System.Diagnostics.CodeAnalysis;
using global::System.Runtime.CompilerServices;
using global::System.Runtime.InteropServices;
using global::System.Runtime.Versioning;
using winmdroot = global::Windows.Win32;
namespace Windows.Win32
{
	namespace System.Diagnostics.Debug
	{
		/// <summary>Describes an entry in the descriptor table. This structure is valid only on x86-based systems.</summary>
		/// <remarks>
		/// <para>The <a href="https://docs.microsoft.com/windows/desktop/api/winbase/nf-winbase-getthreadselectorentry">GetThreadSelectorEntry</a> function fills this structure with information from an entry in the descriptor table. You can use this information to convert a segment-relative address to a linear virtual address. The base address of a segment is the address of offset 0 in the segment. To calculate this value, combine the <b>BaseLow</b>, <b>BaseMid</b>, and <b>BaseHi</b> members. The limit of a segment is the address of the last byte that can be addressed in the segment. To calculate this value, combine the <b>LimitLow</b> and <b>LimitHi</b> members.</para>
		/// <para><see href="https://docs.microsoft.com/windows/win32/api//winnt/ns-winnt-ldt_entry#">Read more on docs.microsoft.com</see>.</para>
		/// </remarks>
		[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
		internal partial struct LDT_ENTRY
		{
			/// <summary>The low-order part of the address of the last byte in the segment.</summary>
			internal ushort LimitLow;
			/// <summary>The low-order part of the base address of the segment.</summary>
			internal ushort BaseLow;
			/// <summary>The high-order portion of the descriptor. This member may be interpreted as bytes or collections of bits, depending on the level of detail required.</summary>
			internal winmdroot.System.Diagnostics.Debug.LDT_ENTRY._HighWord_e__Union HighWord;

			[StructLayout(LayoutKind.Explicit)]
			[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
			internal partial struct _HighWord_e__Union
			{
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.LDT_ENTRY._HighWord_e__Union._Bytes_e__Struct Bytes;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.LDT_ENTRY._HighWord_e__Union._Bits_e__Struct Bits;

				[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
				internal partial struct _Bytes_e__Struct
				{
					internal byte BaseMid;
					internal byte Flags1;
					internal byte Flags2;
					internal byte BaseHi;
				}

				[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
				internal partial struct _Bits_e__Struct
				{
					internal uint _bitfield;
				}
			}
		}
	}
}
