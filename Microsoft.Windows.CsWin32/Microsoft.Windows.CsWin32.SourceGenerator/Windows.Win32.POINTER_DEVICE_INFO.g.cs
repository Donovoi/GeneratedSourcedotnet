// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981
using global::System;
using global::System.Diagnostics;
using global::System.Diagnostics.CodeAnalysis;
using global::System.Runtime.CompilerServices;
using global::System.Runtime.InteropServices;
using global::System.Runtime.Versioning;
using winmdroot = global::Windows.Win32;
namespace Windows.Win32
{
	namespace UI.Controls
	{
		/// <summary>Contains information about a pointer device. An array of these structures is returned from the GetPointerDevices function. A single structure is returned from a call to the GetPointerDevice function.</summary>
		/// <remarks>
		/// <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-pointer_device_info">Learn more about this API from docs.microsoft.com</see>.</para>
		/// </remarks>
		[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
		internal partial struct POINTER_DEVICE_INFO
		{
			/// <summary>
			/// <para>One of the values from <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ne-wingdi-displayconfig_rotation">DISPLAYCONFIG_ROTATION</a>, which identifies the orientation of the input digitizer. <div class="alert"><b>Note</b>  This value is 0 when the source of input is <a href="https://docs.microsoft.com/previous-versions/windows/desktop/input_touchinjection/touch-injection-portal">Touch Injection</a>.</div> <div> </div></para>
			/// <para><see href="https://docs.microsoft.com/windows/win32/api//winuser/ns-winuser-pointer_device_info#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal uint displayOrientation;
			/// <summary>The handle to the pointer device.</summary>
			internal winmdroot.Foundation.HANDLE device;
			/// <summary>The device type.</summary>
			internal winmdroot.UI.Controls.POINTER_DEVICE_TYPE pointerDeviceType;
			/// <summary>The HMONITOR for the display that the device is mapped to. This is not necessarily the monitor that the pointer device is physically connected to.</summary>
			internal winmdroot.Graphics.Gdi.HMONITOR monitor;
			/// <summary>The lowest ID that's assigned to the device.</summary>
			internal uint startingCursorId;
			/// <summary>The number of supported simultaneous contacts.</summary>
			internal ushort maxActiveContacts;
			/// <summary>The string that identifies the product.</summary>
			internal winmdroot.__char_520 productString;
		}
	}
}
