// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981
using global::System;
using global::System.Diagnostics;
using global::System.Diagnostics.CodeAnalysis;
using global::System.Runtime.CompilerServices;
using global::System.Runtime.InteropServices;
using global::System.Runtime.Versioning;
using winmdroot = global::Windows.Win32;
namespace Windows.Win32
{
	namespace System.Diagnostics.Debug
	{
		/// <summary>Describes a debugging event.</summary>
		/// <remarks>
		/// <para>If the <a href="https://docs.microsoft.com/windows/desktop/api/debugapi/nf-debugapi-waitfordebugevent">WaitForDebugEvent</a> function succeeds, it fills in the members of a <b>DEBUG_EVENT</b> structure.</para>
		/// <para><see href="https://docs.microsoft.com/windows/win32/api//minwinbase/ns-minwinbase-debug_event#">Read more on docs.microsoft.com</see>.</para>
		/// </remarks>
		[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
		internal partial struct DEBUG_EVENT
		{
			/// <summary>Type: <b>DWORD</b></summary>
			internal winmdroot.System.Diagnostics.Debug.DEBUG_EVENT_CODE dwDebugEventCode;
			/// <summary>
			/// <para>Type: <b>DWORD</b> The identifier of the process in which the debugging event occurred. A debugger uses this value to locate the debugger's per-process structure. These values are not necessarily small integers that can be used as table indices.</para>
			/// <para><see href="https://docs.microsoft.com/windows/win32/api//minwinbase/ns-minwinbase-debug_event#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal uint dwProcessId;
			/// <summary>
			/// <para>Type: <b>DWORD</b> The identifier of the thread in which the debugging event occurred. A debugger uses this value to locate the debugger's per-thread structure. These values are not necessarily small integers that can be used as table indices.</para>
			/// <para><see href="https://docs.microsoft.com/windows/win32/api//minwinbase/ns-minwinbase-debug_event#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal uint dwThreadId;
			/// <summary>
			/// <para>Any additional information relating to the debugging event. This union takes on the type and value appropriate to the type of debugging event, as described in the <b>dwDebugEventCode</b> member.</para>
			/// <para><see href="https://docs.microsoft.com/windows/win32/api//minwinbase/ns-minwinbase-debug_event#members">Read more on docs.microsoft.com</see>.</para>
			/// </summary>
			internal winmdroot.System.Diagnostics.Debug.DEBUG_EVENT._u_e__Union u;

			[StructLayout(LayoutKind.Explicit)]
			[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.2.104-beta+6d86f35b75")]
			internal partial struct _u_e__Union
			{
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.EXCEPTION_DEBUG_INFO Exception;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.CREATE_THREAD_DEBUG_INFO_unmanaged CreateThread;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.CREATE_PROCESS_DEBUG_INFO_unmanaged CreateProcessInfo;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.EXIT_THREAD_DEBUG_INFO ExitThread;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.EXIT_PROCESS_DEBUG_INFO ExitProcess;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.LOAD_DLL_DEBUG_INFO LoadDll;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.UNLOAD_DLL_DEBUG_INFO UnloadDll;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.OUTPUT_DEBUG_STRING_INFO DebugString;
				[FieldOffset(0)]
				internal winmdroot.System.Diagnostics.Debug.RIP_INFO RipInfo;
			}
		}
	}
}
